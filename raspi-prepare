#!/usr/bin/env ruby

# raspi-prepare
#
# Copyright (c) 2015 Yoshiyuki Koyanagi <moutend@gmail.com>
# raspi-prepare is licensed under the terms of the MIT license.
# See moutend.mit-license.org

require 'optparse'

run =
-> commands {
  status = {:ok => 0, :error => 0}

  options = {}
  OptionParser.new do |opts|
    opts.banner = "Usage: raspi-prepare [OPTION]\n\n"

    choices = {
      "rpi_addr" => [
        "-a=RPI_ADDR",
        "Specify an IP address assigned to Raspberry Pi."
      ],
      "dry_run" => [
        "-n",
        "--dry-run",
        "Do nothing actually."
      ],
      "force" => [
        "--force",
        "Ignore errors and run the commands."
      ]
    }

    choices.each_pair do |key, value|
      opts.on *value do |v|
        options[key] = v
      end
    end
  end.parse!

  rpi_addr = options["rpi_addr"] || "192.168.2.2"
  dry_run  = options["dry_run"] || options["dry-run"]
  force    = options["force"]

  commands.each_with_index do |command, n|
    command.gsub! /\$RPI_ADDR/, rpi_addr
    puts "Step #{n}: #{command}"

    if dry_run
      system "echo Step #{n}: Doing nothing."
    else
      system command
    end

    if $?.exitstatus > 0
      status[:error] += 1
      puts "Step #{n}: #{$?}.\n\n"
    else
      status[:ok] += 1
      puts "Step #{n}: Done.\n\n"
    end

    if (not force) && $?.exitstatus > 0
      break
    end
  end

  puts "status = #{status}"

  if status[:error] == 0
    puts "🍺  Successfully done all tasks!"
  else
    puts "🍺  Let's take a break!"
  end
}

trap "SIGINT" do exit end

commands = []

File.open('./src/commands.sh').each do |v|
  if v.match(/^[^#].*/) && v != "\n"
   commands.push v
  end
end

run[commands]
